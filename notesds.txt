binary tree --> allmost two child
binary search tree --> node < root node <= node
strictly binary tree --> each node has no child or two child
complete binary tree --> all leaf nodes are places a same level
extended binary tree --> by adding some additional node
threaded binary tree --> implement the concept of thread
expression tree --> represent the arithmetic expression
heap tree --> a complete binary tree in which each node has either greater value from its child node or less value from its child node. i. max heap ii.min heap.
avl tree --> an optimal binary search tree,the difference between the height of left sub tree and right sub tree is 1,0,-1.

A variable can be of the following types:
Local Variable
Global Variable
Static Variable
Extern Variable
Auto Variable
Register Variable

The size of these basic data types can be modified using data type modifiers which are:
short
long
signed
unsigned

There are different types of pointers :--
Double Pointers
Function Pointers
Structure Pointers
NULL Pointers
Dangling Pointers
Wild Pointers

Type of Function
A function can be of 4 types based on return value and parameters:

Function with no return value and no parameters.
Function with no return value and parameters.
Function with return value and no parameters.
Function with return value and parameters.

Dynamic Memory Management
Dynamic memory management allows the programmer to allocate the memory at the program’s runtime. The C language provides four <stdlib.h> functions for dynamic memory management which are malloc(), calloc(), realloc() and free().

C Storage Classes are used to describe the features of a variable/function. These features basically include the scope, visibility, and lifetime which help us to trace the existence of a particular variable during the runtime of a program.

1. auto
This is the default storage class for all the variables declared inside a function or a block. Hence, the keyword auto is rarely used while writing programs in C language. Auto variables can be only accessed within the block/function they have been declared and not outside them (which defines their scope). Of course, these can be accessed within nested blocks within the parent block/function in which the auto variable was declared.

2. register
This storage class declares register variables that have the same functionality as that of the auto variables. The only difference is that the compiler tries to store these variables in the register of the microprocessor if a free register is available. This makes the use of register variables to be much faster than that of the variables stored in the memory during the runtime of the program.

3. static
This storage class is used to declare static variables which are popularly used while writing programs in C language. Static variables have the property of preserving their value even after they are out of their scope! Hence, static variables preserve the value of their last use in their scope. So we can say that they are initialized only once and exist till the termination of the program. Thus, no new memory is allocated because they are not re-declared.

4. extern
Extern storage class simply tells us that the variable is defined elsewhere and not within the same block where it is used. Basically, the value is assigned to it in a different block and this can be overwritten/changed in a different block as well. So an extern variable is nothing but a global variable initialized with a legal value where it is declared in order to be used elsewhere. It can be accessed within any function/block.
Also, a normal global variable can be made extern as well by placing the ‘extern’ keyword before its declaration/definition in any function/block. This basically signifies that we are not initializing a new variable but instead, we are using/accessing the global variable only. The main purpose of using extern variables is that they can be accessed between two different files which are part of a large program.

The OSI (Open Systems Interconnection) Model is a set of rules that explains how different computer systems communicate over a network.
there are seven layers
1.application layer - closest to the end user, this layer interact with software application. (HTTP,SMTP,DNS)
2.presentation layer - this layer ensure the data is in readable formate, data encryption and data decryption.
3.session layer - this layer maintained the connection between application.
4.transport layer - provide reliable data transfer through tcp and udp protocal
5.network layer - it makes sure that the ip packets are routed by the router.
6.data link layer - handle error detection and error correction under the frame level.
7.physical layer - physical transfer of data happen over the network.

Differences between TCP(transfer control protocol) and UDP(user Datagram protocal)
TCP is a connection-oriented protocol. Connection orientation means that the communicating devices should establish a connection before transmitting data and should close the connection after transmitting the data.
UDP is the Datagram-oriented protocol. This is because there is no overhead for opening a connection, maintaining a connection, or terminating a connection. UDP is efficient for broadcast and multicast types of network transmission
TCP provides extensive error-checking mechanisms. It is because it provides flow control and acknowledgment of data.
UDP has only the basic error-checking mechanism using checksums.
TCP is comparatively slower than UDP.
UDP is faster, simpler, and more efficient than TCP.
TCP doesn’t support Broadcasting.
UDP supports Broadcasting.
This protocol is primarily utilized in situations when a safe and trustworthy communication procedure is necessary, such as in email, on the web surfing, and in military services.
This protocol is used in situations where quick communication is necessary but where dependability is not a concern, such as VoIP, game streaming, video, and music streaming, etc

difference between MAC Address and IP Address: 
MAC Address stands for Media Access Control Address.
IP Address stands for Internet Protocol Address.
MAC Address is a six byte hexadecimal address.
IP Address is either a four-byte (IPv4) or a sixteen-byte (IPv6) address.
NIC Card’s Manufacturer provides the MAC Address.
Internet Service Provider provides IP Address.
MAC address is hardware oriented.
IP address is software oriented